source('~/rcsvw/rcsvw.R')
store = new.rdf()
add.triple(store,
subject="http://example.org/Subject",
predicate="http://example.org/Predicate",
object="http://example.org/Object")
summarize.rdf(store)
summarize.rdf(store)
store
store = new.rdf()
add.triple(store,
subject=NULL,
predicate="http://example.org/Predicate",
object="http://example.org/Object")
store = new.rdf()
add.triple(store,
subject="",
predicate="http://example.org/Predicate",
object="http://example.org/Object")
parql.rdf(store, paste(
"SELECT ?subject ?predicate ?object {",
"  ?subject ?predicate ?object",
"} LIMIT 5"),
rowvarname="subject"
)
zparql.rdf(store, paste(
"SELECT ?subject ?predicate ?object {",
"  ?subject ?predicate ?object",
"} LIMIT 5"),
rowvarname="subject"
)
sparql.rdf(store, paste(
"SELECT ?subject ?predicate ?object {",
"  ?subject ?predicate ?object",
"} LIMIT 5"),
rowvarname="subject"
)
sparql.rdf(store, paste(
"SELECT ?subject ?predicate ?object {",
"  ?subject ?predicate ?object",
"} LIMIT 30"),
rowvarname="subject"
)
sparql.rdf(store, paste(
"SELECT ?subject ?predicate ?object {",
"  ?subject ?predicate ?object",
"}"),
rowvarname="subject"
)
sparql.rdf(store, paste(
"SELECT ?subject ?predicate ?object {",
"  ?subject ?predicate ?object",
"}")"
)
""
sparql.rdf(store, paste(
"SELECT ?subject ?predicate ?object {",
"  ?subject ?predicate ?object",
"}")
)
store = new.rdf()
add.triple(store,
predicate="http://example.org/Predicate",
object="http://example.org/Object")
store
sparql.rdf(store, paste(
"SELECT ?subject ?predicate ?object {",
"  ?subject http://example.org/Predicate ?object",
"}")
)
sparql.rdf(store, paste(
"SELECT ?subject ?predicate ?object {",
"  ?subject <http://example.org/Predicate> ?object",
"}")
)
store = new.rdf()
add.triple(store,
predicate="http://example.org/Predicate2",
object="http://example.org/Object")
sparql.rdf(store, paste(
"SELECT ?subject ?object {",
"  ?subject <http://example.org/Predicate2> ?object",
"}")
)
store = new.rdf()
add.triple(store,
predicate="http://example.org/Predicate4")
sparql.rdf(store, paste(
"SELECT ?subject ?object {",
"  ?subject <http://example.org/Predicate4> ?object",
"}")
)
sparql.rdf(store, paste(
"SELECT ?subject ?object {",
"  ?subject <http://example3.org/Predicate4> ?object",
"}")
)
store = new.rdf()
add.triple(store,
predicate="http://example3.org/Predicate4")
sparql.rdf(store, paste(
"SELECT ?subject ?object {",
"  ?subject <http://example3.org/Predicate4> ?object",
"}")
)
store
save.rdf(store, "someFile.xml", "N3")
store = new.rdf()
add.triple(store,
predicate="http://example3.org/Predicate4",object="http://example.org/Object")
save.rdf(store, "someFile.xml", "N3")
store = new.rdf()
trace(add.triple(store,
predicate="http://example3.org/Predicate4",object="http://example.org/Object"))
trace(add.triple)
add.triple(store,
+            predicate="http://example3.org/Predicate4",object="http://example.org/Object")
add.triple(store,predicate="http://example3.org/Predicate4",object="http://example.org/Object")
untrace(add.triple)
add.triple(store,predicate="http://example3.org/Predicate4",subject="http://example.org/Subject")
save.rdf(store, "someFile.xml", "N3")
.jinit();.jcall("java/lang/System", "S", "getProperty", "java.runtime.version")
new.rdf
libPaths()
.libPaths()
library(rrdf)
store = new.rdf()
new.rdf
org.apache.jena.rdf.model.Model
new.rdf<-function (ontology = TRUE)
{
if (ontology) {
model <- .jcall("com/github/egonw/rrdf/RJenaHelper",
"Lorg/apache/jena/rdf/model/Model;", "newOntoRdf")
}
else {
model <- .jcall("com/github/egonw/rrdf/RJenaHelper",
"Lorg/apache/jena/rdf/model/Model;", "newRdf")
}
return(model)
}
store = new.rdf()
new.rdf<-function (ontology = TRUE)
{
if (ontology) {
model <- .jcall("com/github/egonw/rrdf/RJenaHelper",
"org/apache/jena/rdf/model/Model;", "newOntoRdf")
}
else {
model <- .jcall("com/github/egonw/rrdf/RJenaHelper",
"Lorg/apache/jena/rdf/model/Model;", "newRdf")
}
return(model)
}
store = new.rdf()
store = new.rdf()
new.rdf<-function (ontology = TRUE)
{
if (ontology) {
model <- .jcall("com/github/egonw/rrdf/RJenaHelper",
"Lorg/apache/jena/rdf/model/Model;", "newOntoRdf")
}
else {
model <- .jcall("com/github/egonw/rrdf/RJenaHelper",
"Lorg/apache/jena/rdf/model/Model;", "newRdf")
}
return(model)
}
new.rdf<-function (ontology = TRUE)
{
if (ontology) {
model <- .jcall("com/github/egonw/rrdf/RJenaHelper",
"Lorg/apache/jena/rdf/model/Model;", "newOntoRdf")
}
else {
model <- .jcall("com/github/egonw/rrdf/RJenaHelper",
"Lorg/apache/jena/rdf/model/Model;", "newRdf")
}
return(model)
}
store = new.rdf()
store = new.rdf()
source('~/rcsvw/rcsvw.R')
library(rrdf)
new.rdf
store = new.rdf()
add.triple(store,
subject="http://example.org/Subject",
predicate="http://example.org/Predicate",
object="http://example.org/Object")
.jcall("com/github/egonw/rrdf/RJenaHelper","Lorg/apache/jena/rdf/model/Resource;","createBlankNode")
.jcall("com/github/egonw/rrdf/RJenaHelper","org/apache/jena/rdf/model/Resource;","createBlankNode")
.jcall("com/github/egonw/rrdf/RJenaHelper","org/apache/jena/rdf/model/Resource;","createProperty")
?.jcall
.jcall("com/github/egonw/rrdf/RJenaHelper","org/apache/jena/rdf/model/Resource;","createBlankNode",store)
.jcall("com/github/egonw/rrdf/RJenaHelper","org/apache/jena/rdf/model/Resource;","createBlankNode",store)
.jcall("java/lang/System","S","getProperty","os.name")
.jcall("com/github/egonw/rrdf/RJenaHelper","org/apache/jena/rdf/model/Resource;","createBlankNode",store)
new.rdf
store = new.rdf()
.jcall("com/github/egonw/rrdf/RJenaHelper","org/apache/jena/rdf/model/Resource;","createBlankNode",store)
.jcall("com/github/egonw/rrdf/RJenaHelper","Lorg/apache/jena/rdf/model/Resource;","createBlankNode",store)
.jcall("com/github/egonw/rrdf/RJenaHelper","Lorg/apache/jena/rdf/model/Resource;","createBlankNode",store)
.jcall("com/github/egonw/rrdf/RJenaHelper","Lorg/apache/jena/rdf/model/Resource;","createBlankNode",store)
BN = .jcall("java/lang/System","S","getProperty","os.name")
.jcall("com/github/egonw/rrdf/RJenaHelper","Lorg/apache/jena/rdf/model/Resource;","createBlankNode",store)->BN
source('~/rcsvw/rcsvw.R')
library(devtools)
install_github("/davideceolin/rrdf",subdir="rrdflibs")
install_github("/davideceolin/rrdf",subdir="rrdf")
install_github("davideceolin/rrdf",subdir="rrdf")
install_github("davideceolin/rrdf",subdir="rrdflibs")
library(rrdflibs)
library(rrdf)
store= new.rdf()
?new.rdf
new.rdf
store= new.rdf()
search()
.jaddClassPath("rrdf.jar")
store= new.rdf()
ls()
pwd()
getwd()
detach("new.rdf")
detach("new.rdf",unload=TRUE)
library(rrdf)
store= new.rdf()
store= new.rdf(FALSE)
detach("package:rrdf",unload=TRUE)
remove.packages(rrdf)
install_github("davideceolin/rrdf",subdir="rrdf",build_vignettes=FALSE)
library(rrdf)
store= new.rdf(FALSE)
NEW.RDF
new.rdf
getwd()
new.rdf()
search()
detach("package:rrdf",unload=TRUE)
detach("package:rrdflibs",unload=TRUE)
remove.packages("rrdf")
remove.packages("rrdflibs")
install_github("davideceolin/rrdf",subdir="rrdflibs")
search()
remove.packages("rrdflibs")
install_github("davideceolin/rrdf",subdir="tree/new_functionalities/rrdflibs")
library(devtools)
install_github("davideceolin/rrdf",subdir="tree/new_functionalities/rrdflibs")
install_github("davideceolin/rrdf",subdir="rrdflibs")
library("rrdflibs")
new.rdf()
remove.packages("rrdflibs")
detach("package:rrdflibs",unload=TRUE)
install_github("davideceolin/rrdf",subdir="tree/new_functionalities/rrdflibs")
library(devtools)
install_github("davideceolin/rrdf",subdir="tree/new_functionalities/rrdflibs")
?install_github
install_github("davideceolin/rrdf",ref="new_functionalities",subdir="rrdflibs")
remove.package("rrdf")
remove.packages("rrdf")
search()
install_github("davideceolin/rrdf",ref="new_functionalities",subdir="rrdf", build_vignettes = FALSE)
library(devtools)
install_github("davideceolin/rrdf",ref="new_functionalities",subdir="rrdf", build_vignettes = FALSE)
library(devtools)
install_github("davideceolin/rrdf",ref="new_functionalities",subdir="rrdf", build_vignettes = FALSE)
library(rrdf)
store=new.rdf()
install_github("davideceolin/rrdf",ref="new_functionalities",subdir="rrdflibs")
library("rrdflibs")
new.rdf()
detach("package:rrdflibs", unload=TRUE)
detach("package:rrdf", unload=TRUE)
detach("package:rrdflibs", unload=TRUE)
library(rrdflibs)
library(rrdf)
new.rdf()
new.rdf()
search()
rm(list = objs[grep("tmp", objs)], pos = ".GlobalEnv")
objs <- ls(pos = ".GlobalEnv")
rm(list = objs[grep("tmp", objs)], pos = ".GlobalEnv")
library(rrdf)
new.rdf()
library(rrdf)
.jaddClassPath("rrdf.jar")
.jaddClassPath("/rrdf.jar")
new.rdf()
.jclassPath()
.jClassPath()
print(.jclassPath())
.addClassPath("/Library/Frameworks/R.framework/Versions/3.2/Resources/library/rrdf/java/rrdf.jar")
.jaddClassPath("/Library/Frameworks/R.framework/Versions/3.2/Resources/library/rrdf/java/rrdf.jar")
new.rdf()
detach("package:rrdf", unload=TRUE)
remove.packages("rrdf")
install_github("davideceolin/rrdf",ref="new_functionalities",subdir="rrdf", build_vignettes = FALSE)
library(devtools)
install_github("davideceolin/rrdf",ref="new_functionalities",subdir="rrdf", build_vignettes = FALSE)
library(rrdf)
new.rdf()
create.BlankNode()
create.blankNode()
library(devtools)
detach("package:rrdf", unload=TRUE)
remove.packages("rrdf")
install_github("davideceolin/rrdf",ref="new_functionalities",subdir="rrdf", build_vignettes = FALSE)
library(rrdf)
store=new.rdf()
create.blankNode()
create.blankNode(store)
tg = create.BlankNode(store)
add.triple(tg,"rdf:type","csvw:TableGroup")
library("rrdf")
tg = create.BlankNode(store)
add.triple(tg,"rdf:type","csvw:TableGroup")
detach("package:rrdf", unload=TRUE)
remove.packages("rrdf")
install_github("davideceolin/rrdf",ref="new_functionalities",subdir="rrdf", build_vignettes = FALSE)
library("rrdf")
add.prefix(store,prefix="csvw",namespace="http://www.w3.org/ns/csvw#")
add.prefix(store,prefix="rdf",namespace="http://www.w3.org/1999/02/22-rdf-syntax-ns#")
tg = create.BlankNode(store)
add.triple(tg,"rdf:type","csvw:TableGroup")
source('~/rcsvw/rcsvw.R')
store=new.rdf()
tg = create.BlankNode(store)
add.triple(tg,"rdf:type","csvw:TableGroup")
create.blankNode<-function(store){
.jcall("com/github/egonw/rrdf/RJenaHelper","Lorg/apache/jena/rdf/model/Resource;","createBlankNode",store)
}
create.blankNode<-function(store){
.jcall("com/github/egonw/rrdf/RJenaHelper","Lorg/apache/jena/rdf/model/Resource;","createBlankNode",store)
}
tg = create.BlankNode(store)
add.triple(tg,"rdf:type","csvw:TableGroup")
create.blankNode()
tg = create.blankNode(store)
add.triple(tg,"rdf:type","csvw:TableGroup")
tgclass = create.resource("csvw:TableGroup")
tgclass = create.Resource("csvw:TableGroup")
create.resource<-function(store,URI){
.jcall("com/github/egonw/rrdf/RJenaHelper","Lorg/apache/jena/rdf/model/Resource;","createResource",store,URI)
}
tgclass = create.resource("csvw:TableGroup")
tgclass = create.resource(store,"csvw:TableGroup")
rdftype = create.resource(store,"rdf:type")
add.triple(tg,rdftype,tgclass)
rdftype = create.resource(store,"rdf:type")
add.triple(store,tg,rdftype,tgclass)
create.blankNode()
create.blankNode(store)
rdftype = create.resource(store,"rdf:type")
add.triple(tg,rdftype,tgclass)
add.triple(store,tg,rdftype,tgclass)
source('~/rcsvw/rcsvw.R')
detach("package:rrdf", unload=TRUE)
remove.packages("rrdf")
install_github("davideceolin/rrdf",ref="new_functionalities",subdir="rrdf", build_vignettes = FALSE)
library(devtools)
install_github("davideceolin/rrdf",ref="new_functionalities",subdir="rrdf", build_vignettes = FALSE)
library(rrdf)
store=rdf.new()
add.prefix(store,prefix="csvw",namespace="http://www.w3.org/ns/csvw#")
add.prefix(store,prefix="rdf",namespace="http://www.w3.org/1999/02/22-rdf-syntax-ns#")
add.prefix(store,prefix="xsd",namespace="http://www.w3.org/2001/XMLSchema#")
#add.prefix(store,prefix="",namespace=paste(url,"#",sep=""))
tg = create.blankNode(store)
tgclass = create.resource(store,"csvw:TableGroup")
rdftype = create.resource(store,"rdf:type")
add.triple(store,tg,rdftype,tgclass)
store=new.rdf()
add.prefix(store,prefix="csvw",namespace="http://www.w3.org/ns/csvw#")
add.prefix(store,prefix="rdf",namespace="http://www.w3.org/1999/02/22-rdf-syntax-ns#")
add.prefix(store,prefix="xsd",namespace="http://www.w3.org/2001/XMLSchema#")
#add.prefix(store,prefix="",namespace=paste(url,"#",sep=""))
tg = create.blankNode(store)
tgclass = create.resource(store,"csvw:TableGroup")
rdftype = create.resource(store,"rdf:type")
add.triple(store,tg,rdftype,tgclass)
source('~/rcsvw/rcsvw.R')
store=new.rdf()
add.prefix(store,prefix="csvw",namespace="http://www.w3.org/ns/csvw#")
add.prefix(store,prefix="rdf",namespace="http://www.w3.org/1999/02/22-rdf-syntax-ns#")
add.prefix(store,prefix="xsd",namespace="http://www.w3.org/2001/XMLSchema#")
#add.prefix(store,prefix="",namespace=paste(url,"#",sep=""))
tg = create.blankNode(store)
tgclass = create.resource(store,"csvw:TableGroup")
rdftype = create.property(store,"rdf:type")
add.triple(store,tg,rdftype,tgclass)
detach("package:rrdf", unload=TRUE)
remove.packages("rrdf")
install_github("davideceolin/rrdf",ref="new_functionalities",subdir="rrdf", build_vignettes = FALSE)
library(devtools)
install_github("davideceolin/rrdf",ref="new_functionalities",subdir="rrdf", build_vignettes = FALSE)
install_github("davideceolin/rrdf",ref="new_functionalities",subdir="rrdf", build_vignettes = FALSE)
library(devtools)
remove.packages("rrdf")
install_github("davideceolin/rrdf",ref="new_functionalities",subdir="rrdf", build_vignettes = FALSE)
library(rrdf)
store=new.rdf()
add.prefix(store,prefix="csvw",namespace="http://www.w3.org/ns/csvw#")
add.prefix(store,prefix="rdf",namespace="http://www.w3.org/1999/02/22-rdf-syntax-ns#")
add.prefix(store,prefix="xsd",namespace="http://www.w3.org/2001/XMLSchema#")
#add.prefix(store,prefix="",namespace=paste(url,"#",sep=""))
tg = create.blankNode(store)
tgclass = create.resource(store,"csvw:TableGroup")
rdftype = create.property(store,"rdf:type")
add.triple(store,tg,rdftype,tgclass)
library(devtools)
remove.packages("rrdf")
install_github("davideceolin/rrdf",ref="new_functionalities",subdir="rrdf", build_vignettes = FALSE)
library(rrdf)
store=new.rdf()
add.prefix(store,prefix="csvw",namespace="http://www.w3.org/ns/csvw#")
add.prefix(store,prefix="rdf",namespace="http://www.w3.org/1999/02/22-rdf-syntax-ns#")
add.prefix(store,prefix="xsd",namespace="http://www.w3.org/2001/XMLSchema#")
#add.prefix(store,prefix="",namespace=paste(url,"#",sep=""))
tg = create.blankNode(store)
tgclass = create.resource(store,"csvw:TableGroup")
rdftype = create.property(store,"rdf:type")
add.triple(store,tg,rdftype,tgclass)
?rrdf
save.rdf("prova")
save.rdf(store,"prova.xml")
source('~/rcsvw/rcsvw.R')
store=new.rdf()
add.prefix(store,prefix="csvw",namespace="http://www.w3.org/ns/csvw#")
add.prefix(store,prefix="rdf",namespace="http://www.w3.org/1999/02/22-rdf-syntax-ns#")
add.prefix(store,prefix="xsd",namespace="http://www.w3.org/2001/XMLSchema#")
#add.prefix(store,prefix="",namespace=paste(url,"#",sep=""))
tg = create.blankNode(store)
tgclass = create.resource(store,"csvw:TableGroup")
rdftype = create.property(store,"http://www.w3.org/1999/02/22-rdf-syntax-ns#type")
add.triple(store,tg,rdftype,tgclass)
save.rdf(store,"prova.xml")
library(devtools)
remove.packages("rrdf")
install_github("davideceolin/rrdf",ref="new_functionalities",subdir="rrdf", build_vignettes = FALSE)
library(rrdf)
store=new.rdf()
add.prefix(store,prefix="csvw",namespace="http://www.w3.org/ns/csvw#")
add.prefix(store,prefix="rdf",namespace="http://www.w3.org/1999/02/22-rdf-syntax-ns#")
add.prefix(store,prefix="xsd",namespace="http://www.w3.org/2001/XMLSchema#")
#add.prefix(store,prefix="",namespace=paste(url,"#",sep=""))
tg = create.blankNode(store)
tgclass = create.resource(store,"csvw:TableGroup")
rdftype = create.property(store,"http://www.w3.org/1999/02/22-rdf-syntax-ns#type")
add.triple(store,tg,rdftype,tgclass)
save.rdf(store,"prova.xml")
source('~/rcsvw/rcsvw.R')
store=new.rdf()
add.prefix(store,prefix="csvw",namespace="http://www.w3.org/ns/csvw#")
add.prefix(store,prefix="rdf",namespace="http://www.w3.org/1999/02/22-rdf-syntax-ns#")
add.prefix(store,prefix="xsd",namespace="http://www.w3.org/2001/XMLSchema#")
#add.prefix(store,prefix="",namespace=paste(url,"#",sep=""))
tg = create.blankNode(store)
tgclass = create.resource(store,"csvw:TableGroup")
rdftype = create.property(store,"http://www.w3.org/1999/02/22-rdf-syntax-ns#type")
add.triple(store,tg,rdftype,tgclass)
save.rdf(store,"prova.xml")
source('~/rcsvw/rcsvw.R')
store=new.rdf()
add.prefix(store,prefix="csvw",namespace="http://www.w3.org/ns/csvw#")
add.prefix(store,prefix="rdf",namespace="http://www.w3.org/1999/02/22-rdf-syntax-ns#")
add.prefix(store,prefix="xsd",namespace="http://www.w3.org/2001/XMLSchema#")
#add.prefix(store,prefix="",namespace=paste(url,"#",sep=""))
tg = create.blankNode(store)
tgclass = create.resource(store,"csvw:TableGroup")
rdftype = create.property(store,"rdf:type")
add.triple(store,tg,rdftype,tgclass)
save.rdf(store,"prova.xml")
save.rdf(store,"prova.xml",format="N3")
source('~/rcsvw/rcsvw.R')
store=new.rdf()
add.prefix(store,prefix="csvw",namespace="http://www.w3.org/ns/csvw#")
add.prefix(store,prefix="rdf",namespace="http://www.w3.org/1999/02/22-rdf-syntax-ns#")
add.prefix(store,prefix="xsd",namespace="http://www.w3.org/2001/XMLSchema#")
#add.prefix(store,prefix="",namespace=paste(url,"#",sep=""))
tg = create.blankNode(store)
tgclass = create.resource(store,"http://www.w3.org/ns/csvw#TableGroup")
rdftype = create.property(store,"http://www.w3.org/1999/02/22-rdf-syntax-ns#type")
add.triple(store,tg,rdftype,tgclass)
save.rdf(store,"prova.xml",format="N3")
source('~/rcsvw/rcsvw.R')
source('~/rcsvw/rcsvw.R')
