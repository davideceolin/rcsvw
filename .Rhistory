fromJSON(csv2json("http://www.w3.org/2013/csvw/tests/tree-ops.csv",metadata="http://www.w3.org/2013/csvw/tests/test027-user-metadata.json",minimal=T))
source('~/rcsvw/R/rcsvw.R')
csv2json("http://www.w3.org/2013/csvw/tests/tree-ops.csv",metadata="http://www.w3.org/2013/csvw/tests/test027-user-metadata.json",minimal=T)
fromJSON(getURL("http://www.w3.org/2013/csvw/tests/test027.json",.opts=curlOptions(followlocation=TRUE)))
getURL("http://www.w3.org/2013/csvw/tests/test027.json",.opts=curlOptions(followlocation=TRUE))
csv2json("http://www.w3.org/2013/csvw/tests/tree-ops.csv",metadata="http://www.w3.org/2013/csvw/tests/test027-user-metadata.json",minimal=T)
source('~/rcsvw/R/rcsvw.R')
csv2json("http://www.w3.org/2013/csvw/tests/tree-ops.csv",metadata="http://www.w3.org/2013/csvw/tests/test027-user-metadata.json",minimal=T)
source('~/rcsvw/R/rcsvw.R')
source('~/rcsvw/R/rcsvw.R')
source('~/rcsvw/R/rcsvw.R')
source('~/rcsvw/R/rcsvw.R')
source('~/rcsvw/R/rcsvw.R')
csv2rdf("http://www.w3.org/2013/csvw/tests/tree-ops.csv",metadata="http://www.w3.org/2013/csvw/tests/test027-user-metadata.json",minimal=T)
source('~/rcsvw/R/rcsvw.R')
csv2rdf("http://www.w3.org/2013/csvw/tests/tree-ops.csv",metadata="http://www.w3.org/2013/csvw/tests/test027-user-metadata.json",minimal=T)
source('~/rcsvw/R/rcsvw.R')
csv2rdf("http://www.w3.org/2013/csvw/tests/tree-ops.csv",metadata="http://www.w3.org/2013/csvw/tests/test027-user-metadata.json",minimal=T)
source('~/rcsvw/R/rcsvw.R')
source('~/rcsvw/R/rcsvw.R')
csv2rdf("http://www.w3.org/2013/csvw/tests/tree-ops.csv",metadata="http://www.w3.org/2013/csvw/tests/test027-user-metadata.json",minimal=T)
s1 <- fromJSON(csv2rdf("http://www.w3.org/2013/csvw/tests/tree-ops.csv",metadata="http://www.w3.org/2013/csvw/tests/test027-user-metadata.json",minimal=T))
s2 <- fromString.rdf(getURL("http://www.w3.org/2013/csvw/tests/test027.ttl",.opts=curlOptions(followlocation=TRUE)),format="TURTLE")
source('~/rcsvw/R/rcsvw.R')
today()
date()
Sys.Date()
as.character(Sys.Date())
as.character(Sys.Date())
source('~/rcsvw/R/rcsvw.R')
source('~/rcsvw/R/rcsvw.R')
Sys.Date()
format(Sys.time(), "%a %b %d %X %Y")
format(Sys.time(), "%Y-%m-%dT%X")
format(Sys.time(), "%Y-%m-%dT%X")
record_test<-function(test,file){
store = load.rdf(file,"TURTLE")
text<-'''[ a earl:Assertion;
earl:assertedBy <http://trustingwebdata.org/foaf#me>;
earl:subject <https://github.com/davideceolin/rcsvw>;
earl:test <http://www.w3.org/2013/csvw/tests/manifest-rdf#'''+test+'''>;
earl:result [
a earl:TestResult;
earl:outcome earl:passed;
dc:date '''+as.character(format(Sys.time(), "%Y-%m-%dT%X"))+''';
earl:mode earl:automatic ] .'''
fromString.rdf(text,format="TURTLE",appendTo=store)
save.rdf(store,"/Users/dceolin/Desktop/test.ttl",format="TURTLE")
}
text<-'''[ a earl:Assertion;
earl:assertedBy <http://trustingwebdata.org/foaf#me>;
earl:subject <https://github.com/davideceolin/rcsvw>;
earl:test <http://www.w3.org/2013/csvw/tests/manifest-rdf#'''+test+'''>;
earl:result [
a earl:TestResult;
earl:outcome earl:passed;
dc:date '''+as.character(format(Sys.time(), "%Y-%m-%dT%X"))+''';
earl:mode earl:automatic ] .'''
record_test<-function(test,file){
store = load.rdf(file,"TURTLE")
text<-"""[ a earl:Assertion;
earl:assertedBy <http://trustingwebdata.org/foaf#me>;
earl:subject <https://github.com/davideceolin/rcsvw>;
earl:test <http://www.w3.org/2013/csvw/tests/manifest-rdf#"""+test+""">;
earl:result [
a earl:TestResult;
earl:outcome earl:passed;
dc:date """+as.character(format(Sys.time(), "%Y-%m-%dT%X"))+""";
earl:mode earl:automatic ] ."""
fromString.rdf(text,format="TURTLE",appendTo=store)
save.rdf(store,"/Users/dceolin/Desktop/test.ttl",format="TURTLE")
}
text<-"[ a earl:Assertion;
earl:assertedBy <http://trustingwebdata.org/foaf#me>;
earl:subject <https://github.com/davideceolin/rcsvw>;
earl:test <http://www.w3.org/2013/csvw/tests/manifest-rdf#"+test+">;
earl:result [
a earl:TestResult;
earl:outcome earl:passed;
dc:date "+as.character(format(Sys.time(), "%Y-%m-%dT%X"))+";
earl:mode earl:automatic ] ."
record_test<-function(test,file){
store = load.rdf(file,"TURTLE")
text<-"[ a earl:Assertion;
earl:assertedBy <http://trustingwebdata.org/foaf#me>;
earl:subject <https://github.com/davideceolin/rcsvw>;
earl:test <http://www.w3.org/2013/csvw/tests/manifest-rdf#"+test+">;
earl:result [
a earl:TestResult;
earl:outcome earl:passed;
dc:date "+as.character(format(Sys.time(), "%Y-%m-%dT%X"))+";
earl:mode earl:automatic ] ."
fromString.rdf(text,format="TURTLE",appendTo=store)
save.rdf(store,"/Users/dceolin/Desktop/test.ttl",format="TURTLE")
}
record_test("test001", "/Users/dceolin/Desktop/test.ttl")
record_test("test001", "/Users/dceolin/Desktop/test.ttl")
record_test<-function(test,file){
store = load.rdf(file,"TURTLE")
text<-"[ a earl:Assertion;
earl:assertedBy <http://trustingwebdata.org/foaf#me>;
earl:subject <https://github.com/davideceolin/rcsvw>;
earl:test <http://www.w3.org/2013/csvw/tests/manifest-rdf#"+test+">;
earl:result [
a earl:TestResult;
earl:outcome earl:passed;
dc:date "+as.character(format(Sys.time(), "%Y-%m-%dT%X"))+";
earl:mode earl:automatic ] ."
text<-gsub('\n','',text)
fromString.rdf(text,format="TURTLE",appendTo=store)
save.rdf(store,"/Users/dceolin/Desktop/test.ttl",format="TURTLE")
}
record_test("test001", "/Users/dceolin/Desktop/test.ttl")
"earl:test <http://www.w3.org/2013/csvw/tests/manifest-rdf#"+"test001"
"earl:test <http://www.w3.org/2013/csvw/tests/manifest-rdf#"+"test001"
record_test<-function(test,file){
store = load.rdf(file,"TURTLE")
text<-paste("[ a earl:Assertion;
earl:assertedBy <http://trustingwebdata.org/foaf#me>;
earl:subject <https://github.com/davideceolin/rcsvw>;
earl:test <http://www.w3.org/2013/csvw/tests/manifest-rdf#",test,">;
earl:result [
a earl:TestResult;
earl:outcome earl:passed;
dc:date ",as.character(format(Sys.time(), "%Y-%m-%dT%X")),";
earl:mode earl:automatic ] .",sep="")
text<-gsub('\n','',text)
fromString.rdf(text,format="TURTLE",appendTo=store)
save.rdf(store,"/Users/dceolin/Desktop/test.ttl",format="TURTLE")
}
record_test("test001", "/Users/dceolin/Desktop/test.ttl")
record_test<-function(test,file){
store = load.rdf(file,"TURTLE")
add.prefix(store,prefix="earl",namespace = "http://www.w3.org/ns/earl#")
add.prefix(store,prefix="dc",namespace="http://purl.org/dc/terms/")
text<-paste("[ a earl:Assertion;
earl:assertedBy <http://trustingwebdata.org/foaf#me>;
earl:subject <https://github.com/davideceolin/rcsvw>;
earl:test <http://www.w3.org/2013/csvw/tests/manifest-rdf#",test,">;
earl:result [
a earl:TestResult;
earl:outcome earl:passed;
dc:date ",as.character(format(Sys.time(), "%Y-%m-%dT%X")),";
earl:mode earl:automatic ] .",sep="")
text<-gsub('\n','',text)
fromString.rdf(text,format="TURTLE",appendTo=store)
save.rdf(store,"/Users/dceolin/Desktop/test.ttl",format="TURTLE")
}
record_test("test001", "/Users/dceolin/Desktop/test.ttl")
record_test<-function(test,file){
store = load.rdf(file,"TURTLE")
add.prefix(store,prefix="earl",namespace = "http://www.w3.org/ns/earl#")
add.prefix(store,prefix="dc",namespace="http://purl.org/dc/terms/")
text<-paste("[ a <http://www.w3.org/ns/earl#Assertion>;
<http://www.w3.org/ns/earl#assertedBy> <http://trustingwebdata.org/foaf#me>;
<http://www.w3.org/ns/earl#subject> <https://github.com/davideceolin/rcsvw>;
<http://www.w3.org/ns/earl#test> <http://www.w3.org/2013/csvw/tests/manifest-rdf#",test,">;
<http://www.w3.org/ns/earl#result> [
a <http://www.w3.org/ns/earl#TestResult>;
<http://www.w3.org/ns/earl#outcome> <http://www.w3.org/ns/earl#passed>;
<http://purl.org/dc/terms/date> ",as.character(format(Sys.time(), "%Y-%m-%dT%X")),";
<http://www.w3.org/ns/earl#mode> <http://www.w3.org/ns/earl#automatic> ] .",sep="")
text<-gsub('\n','',text)
fromString.rdf(text,format="TURTLE",appendTo=store)
save.rdf(store,"/Users/dceolin/Desktop/test.ttl",format="TURTLE")
}
record_test("test001", "/Users/dceolin/Desktop/test.ttl")
record_test<-function(test,file){
store = load.rdf(file,"TURTLE")
add.prefix(store,prefix="earl",namespace = "http://www.w3.org/ns/earl#")
add.prefix(store,prefix="dc",namespace="http://purl.org/dc/terms/")
text<-paste("[ a <http://www.w3.org/ns/earl#Assertion>;
<http://www.w3.org/ns/earl#assertedBy> <http://trustingwebdata.org/foaf#me>;
<http://www.w3.org/ns/earl#subject> <https://github.com/davideceolin/rcsvw>;
<http://www.w3.org/ns/earl#test> <http://www.w3.org/2013/csvw/tests/manifest-rdf#",test,">;
<http://www.w3.org/ns/earl#result> [
a <http://www.w3.org/ns/earl#TestResult>;
<http://www.w3.org/ns/earl#outcome> <http://www.w3.org/ns/earl#passed>;
<http://purl.org/dc/terms/date> ",as.character(format(Sys.time(), "%Y-%m-%dT%X")),";
<http://www.w3.org/ns/earl#mode> <http://www.w3.org/ns/earl#automatic> ] .",sep="")
print(text)
text<-gsub('\n','',text)
fromString.rdf(text,format="TURTLE",appendTo=store)
save.rdf(store,"/Users/dceolin/Desktop/test.ttl",format="TURTLE")
}
record_test("test001", "/Users/dceolin/Desktop/test.ttl")
record_test<-function(test,file){
store = load.rdf(file,"TURTLE")
add.prefix(store,prefix="earl",namespace = "http://www.w3.org/ns/earl#")
add.prefix(store,prefix="dc",namespace="http://purl.org/dc/terms/")
text<-paste("[ a <http://www.w3.org/ns/earl#Assertion>;
<http://www.w3.org/ns/earl#assertedBy> <http://trustingwebdata.org/foaf#me>;
<http://www.w3.org/ns/earl#subject> <https://github.com/davideceolin/rcsvw>;
<http://www.w3.org/ns/earl#test> <http://www.w3.org/2013/csvw/tests/manifest-rdf#",test,">;
<http://www.w3.org/ns/earl#result> [
a <http://www.w3.org/ns/earl#TestResult>;
<http://www.w3.org/ns/earl#outcome> <http://www.w3.org/ns/earl#passed>;
<http://purl.org/dc/terms/date> ",as.character(format(Sys.time(), "%Y-%m-%dT%X")),";
<http://www.w3.org/ns/earl#mode> <http://www.w3.org/ns/earl#automatic> ] .",sep="")
text<-gsub('\n','',text)
print(text)
fromString.rdf(text,format="TURTLE",appendTo=store)
save.rdf(store,"/Users/dceolin/Desktop/test.ttl",format="TURTLE")
}
record_test("test001", "/Users/dceolin/Desktop/test.ttl")
record_test<-function(test,file){
store = load.rdf(file,"TURTLE")
add.prefix(store,prefix="earl",namespace = "http://www.w3.org/ns/earl#")
add.prefix(store,prefix="dc",namespace="http://purl.org/dc/terms/")
text<-paste("[ a <http://www.w3.org/ns/earl#Assertion>;
<http://www.w3.org/ns/earl#assertedBy> <http://trustingwebdata.org/foaf#me>;
<http://www.w3.org/ns/earl#subject> <https://github.com/davideceolin/rcsvw>;
<http://www.w3.org/ns/earl#test> <http://www.w3.org/2013/csvw/tests/manifest-rdf#",test,">;
<http://www.w3.org/ns/earl#result> [
a <http://www.w3.org/ns/earl#TestResult>;
<http://www.w3.org/ns/earl#outcome> <http://www.w3.org/ns/earl#passed>;
<http://purl.org/dc/terms/date> ",as.character(format(Sys.time(), "%Y-%m-%dT%X")),"];
<http://www.w3.org/ns/earl#mode> <http://www.w3.org/ns/earl#automatic> ] .",sep="")
text<-gsub('\n','',text)
print(text)
fromString.rdf(text,format="TURTLE",appendTo=store)
save.rdf(store,"/Users/dceolin/Desktop/test.ttl",format="TURTLE")
}
record_test("test001", "/Users/dceolin/Desktop/test.ttl")
record_test<-function(test,file){
store = load.rdf(file,"TURTLE")
add.prefix(store,prefix="earl",namespace = "http://www.w3.org/ns/earl#")
add.prefix(store,prefix="dc",namespace="http://purl.org/dc/terms/")
text<-paste("[ a <http://www.w3.org/ns/earl#Assertion>;
<http://www.w3.org/ns/earl#assertedBy> <http://trustingwebdata.org/foaf#me>;
<http://www.w3.org/ns/earl#subject> <https://github.com/davideceolin/rcsvw>;
<http://www.w3.org/ns/earl#test> <http://www.w3.org/2013/csvw/tests/manifest-rdf#",test,">;
<http://www.w3.org/ns/earl#result> [
a <http://www.w3.org/ns/earl#TestResult>;
<http://www.w3.org/ns/earl#outcome> <http://www.w3.org/ns/earl#passed>;
<http://purl.org/dc/terms/date> \"",as.character(format(Sys.time(), "%Y-%m-%dT%X")),"\"];
<http://www.w3.org/ns/earl#mode> <http://www.w3.org/ns/earl#automatic> ] .",sep="")
text<-gsub('\n','',text)
print(text)
fromString.rdf(text,format="TURTLE",appendTo=store)
save.rdf(store,"/Users/dceolin/Desktop/test.ttl",format="TURTLE")
}
record_test("test001", "/Users/dceolin/Desktop/test.ttl")
source('~/rcsvw/R/rcsvw.R')
source('~/rcsvw/R/rcsvw.R')
paste("\"")
paste("\"","ff")
as.character(format(Sys.time(), "%Y-%m-%dT%X"))
record_test<-function(test,file){
store = load.rdf(file,"TURTLE")
t<-as.character(format(Sys.time(), "%Y-%m-%dT%X"))
rdf_type<-create.property(store,"http://www.w3.org/1999/02/22-rdf-syntax-ns#type")
TestResult<-create.resource(store,"http://www.w3.org/ns/earl#TestResult")
ass<-create.blankNode(store)
add.triple(store,ass,rdf_type,create.resource(store,"http://www.w3.org/ns/earl#Assertion"))
add.triple(store,ass,create.property(store,"http://www.w3.org/ns/earl#assertedBy"),create.resource(store,"http://trustingwebdata.org/foaf#me"))
add.triple(store,ass,create.property(store,"http://www.w3.org/ns/earl#subject"),create.resource(store,"https://github.com/davideceolin/rcsvw"))
add.triple(store,ass,create.property(store,"http://www.w3.org/ns/earl#test"),create.resource(paste(store,"http://www.w3.org/2013/csvw/tests/manifest-rdf#",test,sep="")))
res<-create.blankNode(store)
add.triple(store,ass,create.property(store,"http://www.w3.org/ns/earl#result"),res)
add.triple(store,ass,create.property(store,"http://www.w3.org/ns/earl#mode"),create.resource(store,"http://www.w3.org/ns/earl#automatic"))
add.triple(store,res,rdf_type,TestResult)
add.triple(store,res,create.property(store,"http://www.w3.org/ns/earl#outcome"),create.resource(store,"http://www.w3.org/ns/earl#passed"))
add.triple(store,res,create.property(store,"http://purl.org/dc/terms/date"),t)
save.rdf(store,"/Users/dceolin/Desktop/test.ttl",format="TURTLE")
}
record_test("test001", "/Users/dceolin/Desktop/test.ttl")
source('~/rcsvw/R/rcsvw.R')
record_test("test001", "/Users/dceolin/Desktop/test.ttl")
class(format(Sys.time(), "%Y-%m-%dT%X"))
record_test<-function(test,file){
store = load.rdf(file,"TURTLE")
t<-format(Sys.time(), "%Y-%m-%dT%X")
rdf_type<-create.property(store,"http://www.w3.org/1999/02/22-rdf-syntax-ns#type")
TestResult<-create.resource(store,"http://www.w3.org/ns/earl#TestResult")
ass<-create.blankNode(store)
add.triple(store,ass,rdf_type,create.resource(store,"http://www.w3.org/ns/earl#Assertion"))
add.triple(store,ass,create.property(store,"http://www.w3.org/ns/earl#assertedBy"),create.resource(store,"http://trustingwebdata.org/foaf#me"))
add.triple(store,ass,create.property(store,"http://www.w3.org/ns/earl#subject"),create.resource(store,"https://github.com/davideceolin/rcsvw"))
add.triple(store,ass,create.property(store,"http://www.w3.org/ns/earl#test"),create.resource(paste(store,"http://www.w3.org/2013/csvw/tests/manifest-rdf#",test,sep="")))
res<-create.blankNode(store)
add.triple(store,ass,create.property(store,"http://www.w3.org/ns/earl#result"),res)
add.triple(store,ass,create.property(store,"http://www.w3.org/ns/earl#mode"),create.resource(store,"http://www.w3.org/ns/earl#automatic"))
add.triple(store,res,rdf_type,TestResult)
add.triple(store,res,create.property(store,"http://www.w3.org/ns/earl#outcome"),create.resource(store,"http://www.w3.org/ns/earl#passed"))
add.triple(store,res,create.property(store,"http://purl.org/dc/terms/date"),t)
save.rdf(store,"/Users/dceolin/Desktop/test.ttl",format="TURTLE")
}
class(format(Sys.time(), "%Y-%m-%dT%X"))
record_test("test001", "/Users/dceolin/Desktop/test.ttl")
record_test<-function(test,file){
store = load.rdf(file,"TURTLE")
t<-format(Sys.time(), "%Y-%m-%dT%X")
rdf_type<-create.property(store,"http://www.w3.org/1999/02/22-rdf-syntax-ns#type")
TestResult<-create.resource(store,"http://www.w3.org/ns/earl#TestResult")
ass<-create.blankNode(store)
#   add.triple(store,ass,rdf_type,create.resource(store,"http://www.w3.org/ns/earl#Assertion"))
#   add.triple(store,ass,create.property(store,"http://www.w3.org/ns/earl#assertedBy"),create.resource(store,"http://trustingwebdata.org/foaf#me"))
#   add.triple(store,ass,create.property(store,"http://www.w3.org/ns/earl#subject"),create.resource(store,"https://github.com/davideceolin/rcsvw"))
#   add.triple(store,ass,create.property(store,"http://www.w3.org/ns/earl#test"),create.resource(paste(store,"http://www.w3.org/2013/csvw/tests/manifest-rdf#",test,sep="")))
#   res<-create.blankNode(store)
#   add.triple(store,ass,create.property(store,"http://www.w3.org/ns/earl#result"),res)
#   add.triple(store,ass,create.property(store,"http://www.w3.org/ns/earl#mode"),create.resource(store,"http://www.w3.org/ns/earl#automatic"))
#   add.triple(store,res,rdf_type,TestResult)
#   add.triple(store,res,create.property(store,"http://www.w3.org/ns/earl#outcome"),create.resource(store,"http://www.w3.org/ns/earl#passed"))
#   add.triple(store,res,create.property(store,"http://purl.org/dc/terms/date"),t)
#   save.rdf(store,"/Users/dceolin/Desktop/test.ttl",format="TURTLE")
}
record_test("test001", "/Users/dceolin/Desktop/test.ttl")
record_test<-function(test,file){
store = load.rdf(file,"TURTLE")
t<-format(Sys.time(), "%Y-%m-%dT%X")
rdf_type<-create.property(store,"http://www.w3.org/1999/02/22-rdf-syntax-ns#type")
TestResult<-create.resource(store,"http://www.w3.org/ns/earl#TestResult")
ass<-create.blankNode(store)
add.triple(store,ass,rdf_type,create.resource(store,"http://www.w3.org/ns/earl#Assertion"))
#   add.triple(store,ass,create.property(store,"http://www.w3.org/ns/earl#assertedBy"),create.resource(store,"http://trustingwebdata.org/foaf#me"))
#   add.triple(store,ass,create.property(store,"http://www.w3.org/ns/earl#subject"),create.resource(store,"https://github.com/davideceolin/rcsvw"))
#   add.triple(store,ass,create.property(store,"http://www.w3.org/ns/earl#test"),create.resource(paste(store,"http://www.w3.org/2013/csvw/tests/manifest-rdf#",test,sep="")))
#   res<-create.blankNode(store)
#   add.triple(store,ass,create.property(store,"http://www.w3.org/ns/earl#result"),res)
#   add.triple(store,ass,create.property(store,"http://www.w3.org/ns/earl#mode"),create.resource(store,"http://www.w3.org/ns/earl#automatic"))
#   add.triple(store,res,rdf_type,TestResult)
#   add.triple(store,res,create.property(store,"http://www.w3.org/ns/earl#outcome"),create.resource(store,"http://www.w3.org/ns/earl#passed"))
#   add.triple(store,res,create.property(store,"http://purl.org/dc/terms/date"),t)
#   save.rdf(store,"/Users/dceolin/Desktop/test.ttl",format="TURTLE")
}
record_test("test001", "/Users/dceolin/Desktop/test.ttl")
record_test<-function(test,file){
store = load.rdf(file,"TURTLE")
t<-format(Sys.time(), "%Y-%m-%dT%X")
rdf_type<-create.property(store,"http://www.w3.org/1999/02/22-rdf-syntax-ns#type")
TestResult<-create.resource(store,"http://www.w3.org/ns/earl#TestResult")
ass<-create.blankNode(store)
add.triple(store,ass,rdf_type,create.resource(store,"http://www.w3.org/ns/earl#Assertion"))
#   add.triple(store,ass,create.property(store,"http://www.w3.org/ns/earl#assertedBy"),create.resource(store,"http://trustingwebdata.org/foaf#me"))
#   add.triple(store,ass,create.property(store,"http://www.w3.org/ns/earl#subject"),create.resource(store,"https://github.com/davideceolin/rcsvw"))
#   add.triple(store,ass,create.property(store,"http://www.w3.org/ns/earl#test"),create.resource(paste(store,"http://www.w3.org/2013/csvw/tests/manifest-rdf#",test,sep="")))
#   res<-create.blankNode(store)
#   add.triple(store,ass,create.property(store,"http://www.w3.org/ns/earl#result"),res)
#   add.triple(store,ass,create.property(store,"http://www.w3.org/ns/earl#mode"),create.resource(store,"http://www.w3.org/ns/earl#automatic"))
#   add.triple(store,res,rdf_type,TestResult)
#   add.triple(store,res,create.property(store,"http://www.w3.org/ns/earl#outcome"),create.resource(store,"http://www.w3.org/ns/earl#passed"))
#   add.triple(store,res,create.property(store,"http://purl.org/dc/terms/date"),t)
save.rdf(store,"/Users/dceolin/Desktop/test.ttl",format="TURTLE")
}
record_test("test001", "/Users/dceolin/Desktop/test.ttl")
record_test<-function(test,file){
store = load.rdf(file,"TURTLE")
t<-format(Sys.time(), "%Y-%m-%dT%X")
rdf_type<-create.property(store,"http://www.w3.org/1999/02/22-rdf-syntax-ns#type")
TestResult<-create.resource(store,"http://www.w3.org/ns/earl#TestResult")
ass<-create.blankNode(store)
add.triple(store,ass,rdf_type,create.resource(store,"http://www.w3.org/ns/earl#Assertion"))
#   add.triple(store,ass,create.property(store,"http://www.w3.org/ns/earl#assertedBy"),create.resource(store,"http://trustingwebdata.org/foaf#me"))
#   add.triple(store,ass,create.property(store,"http://www.w3.org/ns/earl#subject"),create.resource(store,"https://github.com/davideceolin/rcsvw"))
#   add.triple(store,ass,create.property(store,"http://www.w3.org/ns/earl#test"),create.resource(paste(store,"http://www.w3.org/2013/csvw/tests/manifest-rdf#",test,sep="")))
res<-create.blankNode(store)
#   add.triple(store,ass,create.property(store,"http://www.w3.org/ns/earl#result"),res)
#   add.triple(store,ass,create.property(store,"http://www.w3.org/ns/earl#mode"),create.resource(store,"http://www.w3.org/ns/earl#automatic"))
#   add.triple(store,res,rdf_type,TestResult)
add.triple(store,res,create.property(store,"http://www.w3.org/ns/earl#outcome"),create.resource(store,"http://www.w3.org/ns/earl#passed"))
#   add.triple(store,res,create.property(store,"http://purl.org/dc/terms/date"),t)
save.rdf(store,"/Users/dceolin/Desktop/test.ttl",format="TURTLE")
}
record_test("test001", "/Users/dceolin/Desktop/test.ttl")
record_test<-function(test,file){
store = load.rdf(file,"TURTLE")
t<-format(Sys.time(), "%Y-%m-%dT%X")
rdf_type<-create.property(store,"http://www.w3.org/1999/02/22-rdf-syntax-ns#type")
TestResult<-create.resource(store,"http://www.w3.org/ns/earl#TestResult")
ass<-create.blankNode(store)
add.triple(store,ass,rdf_type,create.resource(store,"http://www.w3.org/ns/earl#Assertion"))
add.triple(store,ass,create.property(store,"http://www.w3.org/ns/earl#assertedBy"),create.resource(store,"http://trustingwebdata.org/foaf#me"))
add.triple(store,ass,create.property(store,"http://www.w3.org/ns/earl#subject"),create.resource(store,"https://github.com/davideceolin/rcsvw"))
add.triple(store,ass,create.property(store,"http://www.w3.org/ns/earl#test"),create.resource(paste(store,"http://www.w3.org/2013/csvw/tests/manifest-rdf#",test,sep="")))
res<-create.blankNode(store)
#   add.triple(store,ass,create.property(store,"http://www.w3.org/ns/earl#result"),res)
#   add.triple(store,ass,create.property(store,"http://www.w3.org/ns/earl#mode"),create.resource(store,"http://www.w3.org/ns/earl#automatic"))
#   add.triple(store,res,rdf_type,TestResult)
add.triple(store,res,create.property(store,"http://www.w3.org/ns/earl#outcome"),create.resource(store,"http://www.w3.org/ns/earl#passed"))
#   add.triple(store,res,create.property(store,"http://purl.org/dc/terms/date"),t)
save.rdf(store,"/Users/dceolin/Desktop/test.ttl",format="TURTLE")
}
record_test("test001", "/Users/dceolin/Desktop/test.ttl")
source('~/rcsvw/R/rcsvw.R')
source('~/rcsvw/R/rcsvw.R')
fromJSON(getURL(metadata,.opts=curlOptions(followlocation=TRUE)))$tables
fromJSON(getURL("http://w3c.github.io/csvw/tests/countries.json",.opts=curlOptions(followlocation=TRUE)))$tables
fromJSON(getURL("http://w3c.github.io/csvw/tests/countries.json",.opts=curlOptions(followlocation=TRUE)))$tables->tmp
lapply(tmp,function(x){x})
lapply(tmp,function(x){x$url})
lapply(fromJSON(getURL("http://w3c.github.io/csvw/tests/countries.json",.opts=curlOptions(followlocation=TRUE)))$tables,function(x){x$url}
)
lapply(fromJSON(getURL(url,.opts=curlOptions(followlocation=TRUE)))$tables,function(x){x$url})
url<-"http://w3c.github.io/csvw/tests/countries.json"
lapply(fromJSON(getURL(url,.opts=curlOptions(followlocation=TRUE)))$tables,function(x){x$url})
lapply(fromJSON(getURL(url,.opts=curlOptions(followlocation=TRUE)))$tables,function(x){gsub(tail(unlist(strsplit(url,"/")),n=1),x$url,url)})
lapply(fromJSON(getURL(url,.opts=curlOptions(followlocation=TRUE)))$tables,function(x){getURL(gsub(tail(unlist(strsplit(url,"/")),n=1),x$url,url),.opts=curlOptions(followlocation=T))})
lapply(fromJSON(getURL(url,.opts=curlOptions(followlocation=TRUE)))$tables,function(x){read.csv(getURL(gsub(tail(unlist(strsplit(url,"/")),n=1),x$url,url),.opts=curlOptions(followlocation=T)))})
lapply(fromJSON(getURL(url,.opts=curlOptions(followlocation=TRUE)))$tables,function(x){read.csv(text=getURL(gsub(tail(unlist(strsplit(url,"/")),n=1),x$url,url),.opts=curlOptions(followlocation=T)))})
lapply(fromJSON(getURL(url,.opts=curlOptions(followlocation=TRUE)))$tables,function(x){Tabular(getURL(gsub(tail(unlist(strsplit(url,"/")),n=1),x$url,url),.opts=curlOptions(followlocation=T))})
lapply(fromJSON(getURL(url,.opts=curlOptions(followlocation=TRUE)))$tables,function(x){Tabular(getURL(gsub(tail(unlist(strsplit(url,"/")),n=1),x$url,url),.opts=curlOptions(followlocation=T)))})
lapply(fromJSON(getURL(url,.opts=curlOptions(followlocation=TRUE)))$tables,function(x){Tabular(gsub(tail(unlist(strsplit(url,"/")),n=1),x$url,url))})
lapply(fromJSON(getURL(url,.opts=curlOptions(followlocation=TRUE)))$tables,function(x){csv2json(x)})
lapply(fromJSON(getURL(url,.opts=curlOptions(followlocation=TRUE)))$tables,function(x){csv2json(gsub(tail(unlist(strsplit(url,"/")),n=1),x$url,url))})
source('~/rcsvw/R/rcsvw.R')
paste(NULL,"2")
paste(NULL,"2",sep="")
metadata
paste(metadata$tableSchema[[1]]$propertyUrl,"1",sep="")
source('~/rcsvw/R/rcsvw.R')
gsub("[{}]",'',NULL)
paste(gsub("[{}]",'',NULL),"1")
name<-"ok"
url<-"http://www.geonames.org/ontology{#_name}"
gsub("name",name,url)
m<-gregexpr("\\{[^:]+\\}",metadata$tableSchema$aboutUrl)
id<-gsub("\\{|\\}",'',regmatches(metadata$tableSchema$aboutUrl, m))
id
m<-gregexpr("\\{[^:]+\\}",url)
id<-gsub("\\{|\\}",'',regmatches(url, m))
id
assing(url, name)
assign(url, name)
url
stri_replace_all_fixed
library(stringi)
stri_replace_all_fixed
?stri_replace_all_fixed
metadata
metadata[[11]]
metadata[[1]]
metadata[[2]]
metadata[[3]]
metadata<-fromJSON(getURL("http://w3c.github.io/csvw/tests/countries.json",.opts=curlOptions(followlocation=TRUE)))
metadata
metadata$tables[[1]]$tableSchema
metadata$tables[[1]]$tableSchema$columns[[1]]
stri_replace_all_fixed(url,metadata$tables[[1]]$tableSchema$columns[[1]])
stri_replace_all_fixed(url,names(metadata$tables[[1]]$tableSchema$columns[[1]]),metadata$tables[[1]]$tableSchema$columns[[1]])
stri_replace_all_fixed(url,names(metadata$tables[[1]]$tableSchema$columns[[1]]),metadata$tables[[1]]$tableSchema$columns[[1]],vectorize_all = F)
stri_replace_all_fixed(url,names(metadata$tables[[1]]$tableSchema$columns[[1]]),metadata$tables[[1]]$tableSchema$columns[[1]],vectorize_all = F)->u
gsub("[{}_]",'',u)
source('~/rcsvw/R/rcsvw.R')
source('~/rcsvw/R/rcsvw.R')
source('~/rcsvw/R/rcsvw.R')
lapply(fromJSON(getURL(url,.opts=curlOptions(followlocation=TRUE)))$tables,function(x){csv2json(gsub(tail(unlist(strsplit(url,"/")),n=1),x$url,url))})
source('~/rcsvw/R/rcsvw.R')
csv2json("http://www.w3.org/2013/csvw/tests/countries.json")
source('~/rcsvw/R/rcsvw.R')
csv2json("http://www.w3.org/2013/csvw/tests/countries.json")
source('~/rcsvw/R/rcsvw.R')
csv2json("http://www.w3.org/2013/csvw/tests/countries.json")
csv2json(metadata="http://www.w3.org/2013/csvw/tests/countries.json")
source('~/rcsvw/R/rcsvw.R')
csv2json(metadata="http://www.w3.org/2013/csvw/tests/countries.json")
source('~/rcsvw/R/rcsvw.R')
source('~/rcsvw/R/rcsvw.R')
csv2json(metadata="http://www.w3.org/2013/csvw/tests/countries.json")
source('~/rcsvw/R/rcsvw.R')
csv2json(metadata="http://www.w3.org/2013/csvw/tests/countries.json")
source('~/rcsvw/R/rcsvw.R')
csv2json(metadata="http://www.w3.org/2013/csvw/tests/countries.json")
source('~/rcsvw/R/rcsvw.R')
csv2json(metadata="http://www.w3.org/2013/csvw/tests/countries.json")
source('~/rcsvw/R/rcsvw.R')
class(c(1))
class(c(1,2))
class(c(1,2,3))
source('~/rcsvw/R/rcsvw.R')
source('~/rcsvw/R/rcsvw.R')
source('~/rcsvw/R/rcsvw.R')
source('~/rcsvw/R/rcsvw.R')
source('~/rcsvw/R/rcsvw.R')
csv2json(metadata="http://www.w3.org/2013/csvw/tests/countries.json")
source('~/rcsvw/R/rcsvw.R')
csv2json(metadata="http://www.w3.org/2013/csvw/tests/countries.json")
list(NULL)
source('~/rcsvw/R/rcsvw.R')
csv2json(metadata="http://www.w3.org/2013/csvw/tests/countries.json")
class(NULL)
source('~/rcsvw/R/rcsvw.R')
class(as.list(NULL))
source('~/rcsvw/R/rcsvw.R')
csv2json(metadata="http://www.w3.org/2013/csvw/tests/countries.json")
source('~/rcsvw/R/rcsvw.R')
csv2json(metadata="http://www.w3.org/2013/csvw/tests/countries.json")
source('~/rcsvw/R/rcsvw.R')
csv2json(metadata="http://www.w3.org/2013/csvw/tests/countries.json")
source('~/rcsvw/R/rcsvw.R')
csv2json(metadata="http://www.w3.org/2013/csvw/tests/countries.json")
source('~/rcsvw/R/rcsvw.R')
csv2json(metadata="http://www.w3.org/2013/csvw/tests/countries.json")
source('~/rcsvw/R/rcsvw.R')
source('~/rcsvw/R/rcsvw.R')
csv2json(metadata="http://www.w3.org/2013/csvw/tests/countries.json")
source('~/rcsvw/R/rcsvw.R')
csv2json(metadata="http://www.w3.org/2013/csvw/tests/countries.json")
source('~/rcsvw/R/rcsvw.R')
csv2json(metadata="http://www.w3.org/2013/csvw/tests/countries.json")
source('~/rcsvw/R/rcsvw.R')
csv2json(metadata="http://www.w3.org/2013/csvw/tests/countries.json")
is.empty.model(list())
source('~/rcsvw/R/rcsvw.R')
csv2json(metadata="http://www.w3.org/2013/csvw/tests/countries.json")
source('~/rcsvw/R/rcsvw.R')
csv2json(metadata="http://www.w3.org/2013/csvw/tests/countries.json")
source('~/rcsvw/R/rcsvw.R')
csv2json(metadata="http://www.w3.org/2013/csvw/tests/countries.json")
source('~/rcsvw/R/rcsvw.R')
csv2json(metadata="http://www.w3.org/2013/csvw/tests/countries.json")
